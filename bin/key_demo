#! /usr/bin/env python2
"""Script to edit items as a tree"""

import os
import sys
import argparse
from bdb import BdbQuit

import pysyte
from pym.edit.tree import TreeEditor
from pym.edit.tree import Tundra
from pym.edit import keyboard
from pym.rendering import render


def parse_args():
    """Parse out command line arguments"""
    parser = argparse.ArgumentParser(description=__doc__.splitlines()[0])
    pa = parser.add_argument
    pa('items', nargs='*', help='items to be editted')
    pa('-c', '--command', action='store', default=list(), type=str,
       help='act like vim for a string of hjkl commands',)
    pa('-q', '--quiet', action='store_true', help='Show less output')
    args = parser.parse_args()
    return args


def main():
    """Edit items as a tree"""
    try:
        breakpoint()
        args = parse_args()
        items = eval(' '.join(args.items))
        edit3 = TreeEditor(items)
        keys = iter(args.command) if args.command else pysyte.getch.yield_asciis()
        for key in keys:
            try:
                edit3.edit(key, keyboard)
            except Tundra:
                print("Don't go there", file=sys.stderr)
                continue
            print(render(edit3.climber.item()))
    except (SystemExit, BdbQuit):
        pass
    return os.EX_OK


if __name__ == '__main__':
    sys.exit(main())
